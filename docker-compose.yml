version: '3.8'
name: clothesvirtualstore_all

services:
  rabbitmq:
    image: rabbitmq:3-management             
    ports: 
      - 5672:5672
      - 15672:15672
    volumes:
      - /docker_conf/rabbitmq/data/:/var/lib/rabbitmq/
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=123456
    networks:
      - clothesvirtualstore_network
  mysql:
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: virtualstore
    networks:
      - clothesvirtualstore_network
  redis:
    image: redis
    command: redis-server --requirepass Redis2019!
    ports:
      - 6379:6379
    networks:
      - clothesvirtualstore_network
  apiproducts:
    image: virtualstoreapiproducts
    build: ./api/ClothesVirtualStore.Api.Products    
    ports:
      - 8080:8080
    networks:
      - clothesvirtualstore_network
    restart: always
    depends_on:
      - mysql
  consumercartcheckout:
    image: consumercartcheckout
    build: 
      context: ./consumers/CartCheckout
      dockerfile: Dockerfile
      args:
        APP_ENVIRONMENT: LocalPodman
    restart: always
    networks:
      - clothesvirtualstore_network
    depends_on:
      - mysql
      - rabbitmq
      - apiproducts
  apicart:
    image: virtualstoreapicart
    build: 
      context: ./api/ClothesVirtualStore.Api.Cart
      dockerfile: Dockerfile
      args:
        APP_ENVIRONMENT: LocalPodman
    ports:
      - 8081:8080
    restart: always
    networks:
      - clothesvirtualstore_network
    depends_on:
      - rabbitmq
volumes:
    logs-folder:
        name: ${log_rabbitmq_management}
        driver: local
networks:
  clothesvirtualstore_network:
    name: clothesvirtualstore_network
    driver: bridge
